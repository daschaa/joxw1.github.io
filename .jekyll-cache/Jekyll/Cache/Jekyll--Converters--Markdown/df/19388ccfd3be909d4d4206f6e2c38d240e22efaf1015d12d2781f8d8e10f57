I"©^<p>Mit ES6 (bzw. ES2015) sind einige gro√üe √Ñnderungen zur JavaScript Sprache dazugekommen. In diesen Notizen werde ich die wichtigen √Ñnderungen festhalten und kurz mit der Syntax aus ES5 vergleichen. Der Inhalte kommt wieder aus dem Kurs von <a href="https://www.udemy.com/course/the-complete-javascript-course/learn/lecture/6034300#overview">Jonas</a>.</p>

<h3 id="var---let---const">var - let - const</h3>

<p>Bei den Variablendeklarationen gibt es zwei neue Schl√ºsselw√∂rter: <strong>let</strong> und <strong>const</strong>. Mit dem Schl√ºsselwort <strong>let</strong> k√∂nnen fl√ºchtige Variablen deklariert werden. Das bedeutet, die Werte der Variablen k√∂nnen wieder neu gesetzt werden (wie bei <em>var</em>). Das Schl√ºsselwort <strong>const</strong> hingegen wird dazu genutzt Konstanten zu definieren. Die Werte von Konstanten k√∂nnen nicht ver√§ndert werden.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ES5</span>
<span class="kd">var</span> <span class="nx">nameES5</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Jane Smith</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">ageES5</span> <span class="o">=</span> <span class="mi">23</span><span class="p">;</span>
<span class="nx">nameES5</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Jane Miller</span><span class="dl">'</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">nameES5</span><span class="p">);</span>

<span class="c1">// ES6</span>
<span class="kd">const</span> <span class="nx">nameES6</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Jane Smith</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">ageES6</span> <span class="o">=</span> <span class="mi">23</span><span class="p">;</span>
<span class="nx">nameES6</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Jane Miller</span><span class="dl">'</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">nameES6</span><span class="p">);</span> <span class="c1">// TypeError!</span>
</code></pre></div></div>

<p>Ein gro√üer Unterschied zwischen <em>var</em>, <em>let</em> und <em>const</em> ist, dass sie einen unterschiedlichen Scope (Namensbereich) besitzen. Die Schl√ºsselworte <em>let</em> und <em>const</em> sind <strong>block-scoped</strong>  - Das bedeutet, dass sie innerhalb eines Blockes g√ºltig sind. Das Schl√ºsselwort <em>var</em> hingegen ist <strong>function-scoped</strong>, was bedeutet, dass innerhalb einer Funktion die Variable nur einmal deklariert werden kann. Im unten stehenden Beispiel wird dieser Unterschied deutlich. Im ES6-Beispiel kann die Variable au√üerhalb des If-Blocks nicht genutzt werden, da sie eine <em>let</em>-Variable ist und daher nicht au√üerhalb des Blocks verf√ºgbar ist.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ES5</span>
<span class="kd">function</span> <span class="nx">driversLicenceES5</span><span class="p">(</span><span class="nx">passedTest</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">passedTest</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">firstName</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">;</span>
    <span class="kd">var</span> <span class="nx">yearOfBirth</span> <span class="o">=</span> <span class="mi">1995</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstName</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">, born in </span><span class="dl">'</span><span class="o">+</span><span class="nx">yearOfBirth</span><span class="o">+</span>
    <span class="dl">'</span><span class="s1">, is now officially allowed to drive a car.</span><span class="dl">'</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// ES6</span>
<span class="kd">function</span> <span class="nx">driversLicenceES6</span><span class="p">(</span><span class="nx">passedTest</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">passedTest</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">firstName</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">;</span>
    <span class="kd">const</span> <span class="nx">yearOfBirth</span> <span class="o">=</span> <span class="mi">1995</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="c1">// Is not defined error!</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstName</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">, born in </span><span class="dl">'</span><span class="o">+</span><span class="nx">yearOfBirth</span><span class="o">+</span>
    <span class="dl">'</span><span class="s1">, is now officially allowed to drive a car.</span><span class="dl">'</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="bl√∂cke-und-iife-immediately-invoked-function-expressions">Bl√∂cke und IIFE (Immediately Invoked Function Expressions)</h3>

<p>In ES5 musste man noch, um Datensicherheit zu erreichen, die <em>Immediately Invoked Function Expressions</em> verwenden. Da in ES6 jedoch die neuen Schl√ºsselworte dazugekommen sind, kann nun die neue Methodik verwendet werden um diese Datensicherheit zu erreichen.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ES5 (IIFE)</span>

<span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">c</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
<span class="p">})();</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span> <span class="c1">// Not defined!</span>

<span class="c1">// ES6 (Block)</span>
<span class="p">{</span>
  <span class="kd">const</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
  <span class="kd">let</span> <span class="nx">b</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
  <span class="kd">var</span> <span class="nx">d</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span> <span class="c1">// = 3</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span> <span class="c1">// Not defined!</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span> <span class="c1">// Not defined!</span>
</code></pre></div></div>

<p>Wie man im Beispiel sieht, werden nicht mehr die <em>IIFE</em> ben√∂tigt um Datenstrukturen privat zu machen. Es gen√ºgt eine geschweifte Klammer, um einen Block zu definieren.</p>

<h3 id="strings">Strings</h3>

<p>Ein neues Feature in ES6 sind die <em>String-Literals</em>. Damit lassen sich Variablen in Strings leichter einbauen, wie im unteren Beispiel zu sehen.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">firstName</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">lastName</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Smith</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">yearOfBirth</span> <span class="o">=</span> <span class="mi">1995</span><span class="p">;</span>
<span class="kd">function</span> <span class="nx">calcAge</span><span class="p">(</span><span class="nx">year</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nb">parseInt</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">().</span><span class="nx">getFullYear</span><span class="p">())</span> <span class="o">-</span> <span class="nx">year</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// ES5</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">This is </span><span class="dl">'</span><span class="o">+</span><span class="nx">firstName</span><span class="o">+</span><span class="dl">'</span><span class="s1"> </span><span class="dl">'</span><span class="o">+</span><span class="nx">lastName</span><span class="o">+</span><span class="dl">'</span><span class="s1"> - he is </span><span class="dl">'</span><span class="o">+</span><span class="nx">calcAge</span><span class="p">(</span><span class="nx">yearOfBirth</span><span class="p">)</span><span class="o">+</span><span class="dl">'</span><span class="s1"> years old</span><span class="dl">'</span><span class="p">);</span>

<span class="c1">// ES6</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`This is </span><span class="p">${</span><span class="nx">firstName</span><span class="p">}</span><span class="s2"> </span><span class="p">${</span><span class="nx">lastName</span><span class="p">}</span><span class="s2"> - he is </span><span class="p">${</span><span class="nx">calcAge</span><span class="p">(</span><span class="nx">yearOfBirth</span><span class="p">)}</span><span class="s2"> years old`</span><span class="p">);</span>
</code></pre></div></div>

<p>Weiterhin gibt es in ES6 einige neue Methoden f√ºr Strings. Nachfolgend sind ein paar aufgelistet.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">firstName</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span>
<span class="kd">let</span> <span class="nx">lastName</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Smith</span><span class="dl">'</span>
<span class="kd">const</span> <span class="nx">n</span> <span class="o">=</span> <span class="s2">`</span><span class="p">${</span><span class="nx">firstName</span><span class="p">}</span><span class="s2"> </span><span class="p">${</span><span class="nx">lastName</span><span class="p">}</span><span class="s2">`</span><span class="p">;</span>
<span class="nx">n</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="dl">'</span><span class="s1">J</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// true</span>
<span class="nx">n</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="dl">'</span><span class="s1">j</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// false</span>
<span class="nx">n</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="dl">'</span><span class="s1">th</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// true</span>
<span class="nx">n</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="dl">'</span><span class="s1"> </span><span class="dl">'</span><span class="p">);</span> <span class="c1">// true</span>
<span class="nx">firstName</span><span class="p">.</span><span class="nx">repeat</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span> <span class="c1">// JohnJohn</span>
</code></pre></div></div>

<h3 id="arrow-funktionen">Arrow-Funktionen</h3>

<p>Einige wichtige neue √Ñnderung in ES6 sind die Arrow-Funktionen. Sie dienen dazu, Callback-Funktionen k√ºrzer auszudr√ºcken.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">years</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1990</span><span class="p">,</span> <span class="mi">1995</span><span class="p">,</span> <span class="mi">1965</span><span class="p">,</span> <span class="mi">1982</span><span class="p">,</span> <span class="mi">1937</span><span class="p">];</span>
<span class="c1">// ES5</span>
<span class="kd">var</span> <span class="nx">ages5</span> <span class="o">=</span> <span class="nx">years</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">elem</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="mi">2020</span> <span class="o">-</span> <span class="nx">elem</span><span class="p">;</span>
<span class="p">});</span>
<span class="c1">// ES6</span>
<span class="kd">let</span> <span class="nx">ages6</span> <span class="o">=</span> <span class="nx">years</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">elem</span> <span class="o">=&gt;</span> <span class="mi">2020</span> <span class="o">-</span> <span class="nx">elem</span><span class="p">);</span>
<span class="nx">ages6</span> <span class="o">=</span> <span class="nx">years</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">elem</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="s2">`Age element </span><span class="p">${</span><span class="nx">index</span> <span class="o">+</span> <span class="mi">1</span><span class="p">}</span><span class="s2">: </span><span class="p">${</span><span class="mi">2020</span> <span class="o">-</span> <span class="nx">elem</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
</code></pre></div></div>

<p>Arrow-Funktion haben kein eigenes <em>this</em>-Schl√ºsselwort, stattdessen nutzen sie das <em>this</em> aus den Funktionen, die sie aufrufen. Man sagt dazu auch <em>lexikalisches this</em>.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ES5</span>
<span class="kd">var</span> <span class="nx">box5</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">color</span><span class="p">:</span> <span class="dl">'</span><span class="s1">green</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">position</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="na">clickMe</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nb">self</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span> <span class="c1">// The this in 'clickMe' will point to window</span>
    <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">.green</span><span class="dl">'</span><span class="p">).</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">click</span><span class="dl">'</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
      <span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">This is box number </span><span class="dl">'</span><span class="o">+</span><span class="nb">self</span><span class="p">.</span><span class="nx">position</span><span class="o">+</span> <span class="dl">'</span><span class="s1"> and it is </span><span class="dl">'</span><span class="o">+</span><span class="nb">self</span><span class="p">.</span><span class="nx">color</span><span class="p">;</span>
      <span class="nx">alert</span><span class="p">(</span><span class="nx">str</span><span class="p">);</span>
    <span class="p">});</span>
  <span class="p">},</span>
<span class="p">};</span>

<span class="nx">box5</span><span class="p">.</span><span class="nx">clickMe</span><span class="p">();</span>

<span class="c1">// ES6</span>
<span class="kd">var</span> <span class="nx">box6</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">color</span><span class="p">:</span> <span class="dl">'</span><span class="s1">green</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">position</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="na">clickMe</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">.green</span><span class="dl">'</span><span class="p">).</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">click</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">This is box number </span><span class="dl">'</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="o">+</span> <span class="dl">'</span><span class="s1"> and it is </span><span class="dl">'</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="p">;</span>
      <span class="nx">alert</span><span class="p">(</span><span class="nx">str</span><span class="p">);</span>
    <span class="p">});</span>
  <span class="p">},</span>
<span class="p">};</span>

<span class="nx">box6</span><span class="p">.</span><span class="nx">clickMe</span><span class="p">();</span>
</code></pre></div></div>

<h3 id="destructuring">Destructuring</h3>

<p>In ES6 wurde eine Methode eingef√ºhrt, Datenstrukturen zu dekonstruieren. Das bedeutet, dass bereits initialisiert Datenstrukturen in ihre Einzelteile aufgeteilt werden k√∂nnen. So kann man z.B. Variablen in ihre Bestandteile zerlegen um die Bestandteile weiter zu verarbeiten.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ES5</span>
<span class="kd">var</span> <span class="nx">john</span> <span class="o">=</span> <span class="p">[</span><span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">,</span> <span class="mi">24</span><span class="p">];</span>
<span class="kd">var</span> <span class="nx">name5</span> <span class="o">=</span> <span class="nx">john</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
<span class="kd">var</span> <span class="nx">age5</span> <span class="o">=</span> <span class="nx">john</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>

<span class="c1">// ES6</span>
<span class="kd">const</span> <span class="p">[</span><span class="nx">name6</span><span class="p">,</span> <span class="nx">age6</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">,</span> <span class="mi">24</span><span class="p">];</span>

<span class="kd">const</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">firstName</span><span class="p">:</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">lastName</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Smith</span><span class="dl">'</span><span class="p">,</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="p">{</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">}</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">;</span>
<span class="kd">const</span> <span class="p">{</span><span class="na">fistName</span><span class="p">:</span> <span class="nx">a</span><span class="p">,</span> <span class="na">lastName</span><span class="p">:</span> <span class="nx">b</span><span class="p">}</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="arrays">Arrays</h3>

<p>Auch Arrays wurden in ES6 mit neuen Methoden ausgestattet. Nachfolgend wird ein n√ºtzliches Beispiel betrachtet.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">boxes</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="dl">'</span><span class="s1">.box</span><span class="dl">'</span><span class="p">);</span>

<span class="c1">// ES5</span>
<span class="kd">var</span> <span class="nx">boxesArr5</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">boxes</span><span class="p">);</span>
<span class="nx">boxesArr5</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">cur</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">cur</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundColor</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">dodgerblue</span><span class="dl">'</span><span class="p">;</span>
<span class="p">});</span>

<span class="c1">// ES6</span>
<span class="kd">const</span> <span class="nx">boxesArr6</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="nx">boxes</span><span class="p">);</span>
<span class="nx">boxesArr6</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">cur</span> <span class="o">=&gt;</span> <span class="nx">cur</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundColor</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">dodgerblue</span><span class="dl">'</span><span class="p">);</span>
</code></pre></div></div>

:ET